@mixin updateInput () {
  .el-input, .el-textarea{
    ::v-deep .el-input__inner, .el-textarea__inner{
      background-color: var(--el-input);
      border: 1px solid var(--el-input-border);
      &:hover{
        border: 1px solid var(--el-input-hover);
      }
    }
    ::v-deep .el-textarea__inner{
      background-color: var(--el-input);
      border: 1px solid var(--el-input-border);
      &:hover{
        border: 1px solid var(--el-input-hover);
      }
    }
  }
}


@mixin updateInput-nodeep () {
  .el-input, .el-textarea{
     .el-input__inner, .el-textarea__inner{
      background-color: var(--el-input);
      border: 1px solid var(--el-input-border);
      &:hover{
        border: 1px solid var(--el-input-hover);
      }
    }
     .el-textarea__inner{
      background-color: var(--el-input);
      border: 1px solid var(--el-input-border);
      &:hover{
        border: 1px solid var(--el-input-hover);
      }
    }
  }
}

@mixin updateButton-nodeep ($color, $hoverColor) {
  .el-button{
    color: rgb(232, 230, 227);
    background-color: $color;
    border: none;
    &:hover{
      background-color: $hoverColor;
    }
  }
}

//媒介查询
$breakpoints: (
  'phone': (
    320px,
    480px
  ),
  'pad': (
    481px,
    768px
  ),
  'notebook': (
    769px,
    1024px
  ),
  'desktop': (
    1025px,
    1200px
  ),
  'tv': 1201px
);
@mixin respond-to($breakName) {
  $bp: map-get($breakpoints, $breakName);
  @if type-of($bp) == 'list' {
    $min: nth($bp, 1);
    $max: nth($bp, 2);
    @media (min-width: $min) and (max-width: $max) {
      @content
    }
  }
  @else {
    @media (min-width: $bp) {
      @content
    }
  }
}
